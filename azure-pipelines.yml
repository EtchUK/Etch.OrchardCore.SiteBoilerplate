resources:
  - repo: self

trigger:
  tags:
    include:
      - "*"
  branches:
    include:
      - main

variables:
  buildConfiguration: "Release"
  VersionNumber: "1.0.0"

stages:
  - stage: build
    displayName: Build
    variables:
      - group: "Global"
    jobs:
      - job: Build
        pool:
          vmImage: "windows-latest"
        steps:
          - script: |
              echo ##vso[task.setvariable variable=VersionNumber;]$(Build.SourceBranchName)
            condition: startsWith(variables['build.sourceBranch'], 'refs/tags/')

          - task: SonarCloudPrepare@1
            displayName: "Prepare SonarCloud Analysis"
            inputs:
              SonarCloud: "SC"
              organization: "$(SC_ORGANIZATION)"
              scannerMode: "MSBuild"
              projectKey: "Etch.OrchardCore.SiteBoilerplate"
              projectName: "Etch.OrchardCore.SiteBoilerplate"
          
          - task: replacetokens@5
            displayName: 'Replace tokens'
            inputs:
              rootDirectory: '$(System.DefaultWorkingDirectory)'
              targetFiles: |
                **/*Etch.OrchardCore.SiteBoilerplate.nuspec
                **/Content/README.md
              actionOnMissing: "fail"
              writeBOM: false
              encoding: 'utf-8'

          - task: DotNetCoreCLI@2
            displayName: "Build project"
            inputs:
              workingDirectory: $(System.DefaultWorkingDirectory)/content
              arguments: "-c $(BuildConfiguration)"

          - task: SonarCloudAnalyze@1
            displayName: "Run SonarCloud Analysis"

          - task: NuGetCommand@2
            displayName: 'NuGet pack'
            inputs:
              command: custom
              arguments: 'pack $(System.DefaultWorkingDirectory)\Etch.OrchardCore.SiteBoilerplate.nuspec -NonInteractive -OutputDirectory $(Build.ArtifactStagingDirectory) -Properties Configuration=Release -Verbosity Detailed -NoDefaultExcludes'

          - task: PublishPipelineArtifact@1
            displayName: 'Publish Pipeline Artifact'
            inputs:
              targetPath: '$(Build.ArtifactStagingDirectory)'
              artifact: drop

          - task: SonarCloudPublish@1
            displayName: "Publish SonarCloud Results"
            
  - stage: publish
    displayName: NuGet Publish
    dependsOn: build
    condition: and(succeeded(), startsWith(variables['build.sourceBranch'], 'refs/tags/'))
    jobs:
      - job: Publish
        pool:
          vmImage: "windows-latest"
        steps:
          - task: DownloadPipelineArtifact@2
            inputs:
              source: "current"
              path: "$(Pipeline.Workspace)"

          - task: NuGetCommand@2
            displayName: "NuGet push"
            inputs:
              command: push
              packagesToPush: "$(Pipeline.Workspace)/**/drop/*.nupkg"
              nuGetFeedType: external
              publishFeedCredentials: "NuGet"